{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GYM_EQUIPMENT = [{\n  name: 'Cardio Zone',\n  percentage: 40,\n  subcategories: ['Treadmills', 'Ellipticals', 'Stationary Bikes', 'Stair Climbers']\n}, {\n  name: 'Functional Training',\n  percentage: 30,\n  subcategories: ['Free Weights', 'Resistance Bands', 'Kettlebells', 'TRX']\n}, {\n  name: 'Strength Training',\n  percentage: 12,\n  subcategories: ['Weight Machines', 'Squat Racks', 'Bench Press']\n}, {\n  name: 'Group Fitness',\n  percentage: 12,\n  subcategories: ['Yoga Studio', 'Spin Class Room', 'Aerobics Room']\n}, {\n  name: 'Amenities',\n  percentage: 8,\n  subcategories: ['Locker Rooms', 'Showers', 'Sauna']\n}];\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [apiCallStatus, setApiCallStatus] = useState('idle');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const apiCallMade = useRef(false);\n  const fetchData = useCallback(async () => {\n    if (apiCallMade.current || apiCallStatus !== 'idle') return;\n    setApiCallStatus('pending');\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      setApiCallStatus('error');\n      return;\n    }\n    try {\n      const apiUrl = `https://besttime.app/api/v1/forecasts`;\n      const params = new URLSearchParams({\n        'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n        'venue_name': venueName,\n        'venue_address': venueAddress\n      });\n      console.log('Making API call to BestTime');\n      const response = await fetch(`${apiUrl}?${params}`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.status === 'OK') {\n        setTrafficData(data);\n        apiCallMade.current = true;\n        setApiCallStatus('success');\n        console.log('API call successful, data received');\n      } else {\n        throw new Error(data.message || 'Failed to fetch data');\n      }\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError(err.message || 'An error occurred while fetching data');\n      setApiCallStatus('error');\n    } finally {\n      setLoading(false);\n    }\n  }, [location.search]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(timer);\n  }, []);\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const dayData = trafficData.analysis[currentDay];\n\n    // Reverse the array and shift it so that it starts from 00:00\n    const reversedData = [...dayData.day_raw].reverse();\n    const shiftedData = [...reversedData.slice(1), reversedData[0]];\n    return shiftedData.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index.toString().padStart(2, '0')}:00`\n    }));\n  };\n  const getOpeningHours = () => {\n    var _currentDayData$day_i;\n    if (!trafficData || !trafficData.analysis) return '';\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.day_info) return '';\n    return ((_currentDayData$day_i = currentDayData.day_info.venue_open_close_v2) === null || _currentDayData$day_i === void 0 ? void 0 : _currentDayData$day_i['12h'][0]) || 'Hours not available';\n  };\n  const isGymOpen24Hours = () => {\n    var _currentDayData$day_i2;\n    if (!trafficData || !trafficData.analysis) return false;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    return currentDayData && currentDayData.day_info && ((_currentDayData$day_i2 = currentDayData.day_info.venue_open_close_v2) === null || _currentDayData$day_i2 === void 0 ? void 0 : _currentDayData$day_i2['12h'][0]) === 'Open 24 hours';\n  };\n  const checkIfGymOpen = () => {\n    if (isGymOpen24Hours()) return true;\n    if (!trafficData || !trafficData.analysis) return false;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.day_info) return false;\n    const {\n      venue_open,\n      venue_closed\n    } = currentDayData.day_info;\n    const currentHour = new Date(currentLocalTime).getHours();\n    return currentHour >= venue_open && currentHour < venue_closed;\n  };\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"label\",\n          interval: 1,\n          tick: ({\n            x,\n            y,\n            payload\n          }) => /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${x},${y})`,\n            children: /*#__PURE__*/_jsxDEV(\"text\", {\n              x: 0,\n              y: 0,\n              dy: 16,\n              textAnchor: \"middle\",\n              fill: \"#666\",\n              transform: \"rotate(-35)\",\n              children: payload.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => `${value}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"traffic\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  };\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n    const {\n      venue_name,\n      venue_address,\n      venue_timezone\n    } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n    const isOpen = checkIfGymOpen();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Gym Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: venue_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\",\n          children: \"CLOSED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 12\n        }, this), \" \", venue_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timezone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 12\n        }, this), \" \", venue_timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 12\n        }, this), \" \", openingHours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  };\n  const getCurrentTrafficPercentage = () => {\n    var _currentDayData$find;\n    if (!trafficData || !trafficData.analysis) return 0;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentHour = new Date(currentLocalTime).getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? ((_currentDayData$find = currentDayData.find(data => data.hour === currentHour)) === null || _currentDayData$find === void 0 ? void 0 : _currentDayData$find.traffic) || 0 : 0;\n  };\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\",\n      children: GYM_EQUIPMENT.map((equipment, index) => {\n        const usage = equipment.percentage / 100 * currentTrafficPercentage;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: equipment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-3xl font-bold text-blue-600\",\n            children: [usage.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2 group\",\n            children: [/*#__PURE__*/_jsxDEV(QuestionMarkCircleIcon, {\n              className: \"h-5 w-5 text-gray-400 hover:text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-4 text-sm\",\n                children: equipment.subcategories.map((sub, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: sub\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSurgeHoursCard = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.surge_hours) return null;\n    const {\n      most_people_come,\n      most_people_leave\n    } = currentDayData.surge_hours;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Surge Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Most people arrive: \", most_people_come, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Most people leave: \", most_people_leave, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), trafficData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold inline-block mr-2\",\n            children: \"Gym Equipment Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded\",\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), renderEquipmentUsageCards(), renderSurgeHoursCard(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Today's popular visiting hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), renderForecastChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"//Kbydo0GAqS+gS1K/1Eg6YZl78=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","useLocation","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","QuestionMarkCircleIcon","jsxDEV","_jsxDEV","GYM_EQUIPMENT","name","percentage","subcategories","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","currentTime","setCurrentTime","Date","apiCallStatus","setApiCallStatus","navigate","location","apiCallMade","fetchData","current","searchParams","URLSearchParams","search","venueName","get","venueAddress","apiUrl","params","console","log","response","fetch","method","ok","Error","status","data","json","message","err","timer","setInterval","clearInterval","getCurrentDayData","analysis","gymTimezone","venue_info","venue_timezone","currentLocalTime","toLocaleString","timeZone","currentDay","getDay","dayData","reversedData","day_raw","reverse","shiftedData","slice","map","value","index","hour","traffic","label","toString","padStart","getOpeningHours","_currentDayData$day_i","currentDayData","day_info","venue_open_close_v2","isGymOpen24Hours","_currentDayData$day_i2","checkIfGymOpen","venue_open","venue_closed","currentHour","getHours","renderForecastChart","chartData","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","interval","tick","x","y","payload","transform","dy","textAnchor","fill","formatter","renderVenueInfo","venue_name","venue_address","openingHours","isOpen","className","getCurrentTrafficPercentage","_currentDayData$find","find","renderEquipmentUsageCards","currentTrafficPercentage","equipment","usage","toFixed","sub","idx","renderSurgeHoursCard","surge_hours","most_people_come","most_people_leave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\n\nconst GYM_EQUIPMENT = [\n  { name: 'Cardio Zone', percentage: 40, subcategories: ['Treadmills', 'Ellipticals', 'Stationary Bikes', 'Stair Climbers'] },\n  { name: 'Functional Training', percentage: 30, subcategories: ['Free Weights', 'Resistance Bands', 'Kettlebells', 'TRX'] },\n  { name: 'Strength Training', percentage: 12, subcategories: ['Weight Machines', 'Squat Racks', 'Bench Press'] },\n  { name: 'Group Fitness', percentage: 12, subcategories: ['Yoga Studio', 'Spin Class Room', 'Aerobics Room'] },\n  { name: 'Amenities', percentage: 8, subcategories: ['Locker Rooms', 'Showers', 'Sauna'] },\n];\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [apiCallStatus, setApiCallStatus] = useState('idle');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const apiCallMade = useRef(false);\n\n  const fetchData = useCallback(async () => {\n    if (apiCallMade.current || apiCallStatus !== 'idle') return;\n    \n    setApiCallStatus('pending');\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      setApiCallStatus('error');\n      return;\n    }\n\n    try {\n      const apiUrl = `https://besttime.app/api/v1/forecasts`;\n      const params = new URLSearchParams({\n        'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n        'venue_name': venueName,\n        'venue_address': venueAddress\n      });\n\n      console.log('Making API call to BestTime');\n      const response = await fetch(`${apiUrl}?${params}`, {\n        method: 'POST',\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.status === 'OK') {\n        setTrafficData(data);\n        apiCallMade.current = true;\n        setApiCallStatus('success');\n        console.log('API call successful, data received');\n      } else {\n        throw new Error(data.message || 'Failed to fetch data');\n      }\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError(err.message || 'An error occurred while fetching data');\n      setApiCallStatus('error');\n    } finally {\n      setLoading(false);\n    }\n  }, [location.search]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const dayData = trafficData.analysis[currentDay];\n    \n    // Reverse the array and shift it so that it starts from 00:00\n    const reversedData = [...dayData.day_raw].reverse();\n    const shiftedData = [...reversedData.slice(1), reversedData[0]];\n    \n    return shiftedData.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index.toString().padStart(2, '0')}:00`\n    }));\n  };\n\n  const getOpeningHours = () => {\n    if (!trafficData || !trafficData.analysis) return '';\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.day_info) return '';\n    \n    return currentDayData.day_info.venue_open_close_v2?.['12h'][0] || 'Hours not available';\n  };\n\n  const isGymOpen24Hours = () => {\n    if (!trafficData || !trafficData.analysis) return false;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    return currentDayData && currentDayData.day_info &&\n           currentDayData.day_info.venue_open_close_v2?.['12h'][0] === 'Open 24 hours';\n  };\n\n  const checkIfGymOpen = () => {\n    if (isGymOpen24Hours()) return true;\n    \n    if (!trafficData || !trafficData.analysis) return false;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.day_info) return false;\n\n    const { venue_open, venue_closed } = currentDayData.day_info;\n    const currentHour = new Date(currentLocalTime).getHours();\n    return currentHour >= venue_open && currentHour < venue_closed;\n  };\n\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) return <p>No data available for today</p>;\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"label\" \n            interval={1} \n            tick={({ x, y, payload }) => (\n              <g transform={`translate(${x},${y})`}>\n                <text x={0} y={0} dy={16} textAnchor=\"middle\" fill=\"#666\" transform=\"rotate(-35)\">\n                  {payload.value}\n                </text>\n              </g>\n            )}\n          />\n          <YAxis />\n          <Tooltip formatter={(value) => `${value}%`} />\n          <Bar dataKey=\"traffic\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n\n    const { venue_name, venue_address, venue_timezone } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n    const isOpen = checkIfGymOpen();\n\n    return (\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Gym Information</h2>\n        <div className=\"flex items-center\">\n          <p className=\"font-bold\">{venue_name}</p>\n          {!isOpen && <span className=\"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\">CLOSED</span>}\n        </div>\n        <p><strong>Address:</strong> {venue_address}</p>\n        <p><strong>Timezone:</strong> {venue_timezone}</p>\n        <p><strong>Hours:</strong> {openingHours}</p>\n      </div>\n    );\n  };\n\n  const getCurrentTrafficPercentage = () => {\n    if (!trafficData || !trafficData.analysis) return 0;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentHour = new Date(currentLocalTime).getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData.find(data => data.hour === currentHour)?.traffic || 0 : 0;\n  };\n\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\">\n        {GYM_EQUIPMENT.map((equipment, index) => {\n          const usage = (equipment.percentage / 100) * currentTrafficPercentage;\n          return (\n            <div key={index} className=\"bg-white rounded-lg shadow-md p-4 relative\">\n              <h3 className=\"text-lg font-semibold mb-2\">{equipment.name}</h3>\n              <p className=\"text-3xl font-bold text-blue-600\">{usage.toFixed(1)}%</p>\n              <div className=\"absolute top-2 right-2 group\">\n                <QuestionMarkCircleIcon className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                <div className=\"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\">\n                  <ul className=\"list-disc pl-4 text-sm\">\n                    {equipment.subcategories.map((sub, idx) => (\n                      <li key={idx}>{sub}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderSurgeHoursCard = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.surge_hours) return null;\n\n    const { most_people_come, most_people_leave } = currentDayData.surge_hours;\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n        <h3 className=\"text-lg font-semibold mb-2\">Surge Hours</h3>\n        <p>Most people arrive: {most_people_come}:00</p>\n        <p>Most people leave: {most_people_leave}:00</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n          </div>\n        )}\n\n        {trafficData && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <div className=\"mb-4\">\n              <h2 className=\"text-xl font-semibold inline-block mr-2\">Gym Equipment Usage</h2>\n              <span className=\"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded\">Live</span>\n            </div>\n            {renderEquipmentUsageCards()}\n            {renderSurgeHoursCard()}\n            <h2 className=\"text-xl font-semibold mb-4\">Today's popular visiting hours</h2>\n            {renderForecastChart()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}