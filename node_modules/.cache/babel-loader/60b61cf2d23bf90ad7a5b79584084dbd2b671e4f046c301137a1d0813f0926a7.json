{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = {\n  status: \"OK\",\n  venue_info: {\n    venue_name: \"Vasa Museum\",\n    venue_address: \"Galärvarvsvägen 14, 115 21 Stockholm, Sweden\",\n    venue_timezone: \"Europe/Stockholm\"\n  },\n  analysis: [{\n    day_info: {\n      day_text: \"Monday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 30, 50, 70, 80, 90, 85, 75, 60, 45, 30, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Tuesday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 35, 55, 75, 85, 95, 90, 80, 65, 50, 35, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Wednesday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 40, 60, 80, 90, 100, 95, 85, 70, 55, 40, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Thursday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 45, 65, 85, 95, 100, 100, 90, 75, 60, 45, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Friday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 50, 70, 90, 100, 100, 100, 95, 80, 65, 50, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Saturday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 55, 75, 95, 100, 100, 100, 100, 85, 70, 55, 0, 0, 0, 0, 0, 0]\n  }, {\n    day_info: {\n      day_text: \"Sunday\"\n    },\n    day_raw: [0, 0, 0, 0, 0, 0, 0, 0, 60, 80, 100, 100, 100, 100, 100, 90, 75, 60, 0, 0, 0, 0, 0, 0]\n  }]\n};\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [usingMockData, setUsingMockData] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      return;\n    }\n    const fetchTrafficData = async () => {\n      try {\n        const apiKey = 'pri_070565f833f9459aad223978a7a19b74';\n        const besttimeUrl = 'https://besttime.app/api/v1/forecasts';\n        const params = new URLSearchParams({\n          'api_key_private': apiKey,\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n        const response = await fetch(`${besttimeUrl}?${params}`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.status !== 'OK') {\n          throw new Error(data.message || 'Failed to fetch forecast data');\n        }\n        setTrafficData(data);\n      } catch (err) {\n        console.error('API Error:', err);\n        setError(`Failed to fetch data: ${err.message}. Using mock data for demonstration.`);\n        setTrafficData(mockData);\n        setUsingMockData(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrafficData();\n  }, [location.search]);\n  const renderForecastChart = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const chartData = trafficData.analysis.flatMap(day => day.day_raw.map((value, hour) => ({\n      day: day.day_info.day_text,\n      hour: hour,\n      traffic: value\n    })));\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"hour\",\n          label: {\n            value: 'Hour of Day',\n            position: 'bottom'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          label: {\n            value: 'Foot Traffic',\n            angle: -90,\n            position: 'insideLeft'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), trafficData.analysis.map(day => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"traffic\",\n          data: chartData.filter(d => d.day === day.day_info.day_text),\n          name: day.day_info.day_text,\n          stroke: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        }, day.day_info.day_text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-2 border border-gray-300 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${data.day}, ${label}:00`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: `Foot Traffic: ${data.traffic}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n    const {\n      venue_name,\n      venue_address,\n      venue_timezone\n    } = trafficData.venue_info;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Venue Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 12\n        }, this), \" \", venue_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 12\n        }, this), \" \", venue_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timezone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 12\n        }, this), \" \", venue_timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), usingMockData && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Using mock data for demonstration purposes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), trafficData && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Weekly Foot Traffic Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), renderForecastChart(), usingMockData && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2\",\n          children: \"Note: This is mock data for demonstration purposes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-gray-200 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap overflow-auto max-h-96\",\n          children: JSON.stringify({\n            trafficData,\n            loading,\n            error,\n            usingMockData\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"P/Gcx6/0dWGV6tP8E02BJBAgVeQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","mockData","status","venue_info","venue_name","venue_address","venue_timezone","analysis","day_info","day_text","day_raw","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","usingMockData","setUsingMockData","navigate","location","searchParams","URLSearchParams","search","venueName","get","venueAddress","fetchTrafficData","apiKey","besttimeUrl","params","response","fetch","method","ok","Error","data","json","message","err","console","renderForecastChart","chartData","flatMap","day","map","value","hour","traffic","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","label","position","angle","content","CustomTooltip","type","filter","d","name","stroke","Math","floor","random","toString","active","payload","length","className","renderVenueInfo","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst mockData = {\n  status: \"OK\",\n  venue_info: {\n    venue_name: \"Vasa Museum\",\n    venue_address: \"Galärvarvsvägen 14, 115 21 Stockholm, Sweden\",\n    venue_timezone: \"Europe/Stockholm\"\n  },\n  analysis: [\n    { day_info: { day_text: \"Monday\" }, day_raw: [0,0,0,0,0,0,0,0,30,50,70,80,90,85,75,60,45,30,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Tuesday\" }, day_raw: [0,0,0,0,0,0,0,0,35,55,75,85,95,90,80,65,50,35,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Wednesday\" }, day_raw: [0,0,0,0,0,0,0,0,40,60,80,90,100,95,85,70,55,40,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Thursday\" }, day_raw: [0,0,0,0,0,0,0,0,45,65,85,95,100,100,90,75,60,45,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Friday\" }, day_raw: [0,0,0,0,0,0,0,0,50,70,90,100,100,100,95,80,65,50,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Saturday\" }, day_raw: [0,0,0,0,0,0,0,0,55,75,95,100,100,100,100,85,70,55,0,0,0,0,0,0] },\n    { day_info: { day_text: \"Sunday\" }, day_raw: [0,0,0,0,0,0,0,0,60,80,100,100,100,100,100,90,75,60,0,0,0,0,0,0] }\n  ]\n};\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [usingMockData, setUsingMockData] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      return;\n    }\n\n    const fetchTrafficData = async () => {\n      try {\n        const apiKey = 'pri_070565f833f9459aad223978a7a19b74';\n        const besttimeUrl = 'https://besttime.app/api/v1/forecasts';\n        const params = new URLSearchParams({\n          'api_key_private': apiKey,\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n\n        const response = await fetch(`${besttimeUrl}?${params}`, {\n          method: 'POST'\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status !== 'OK') {\n          throw new Error(data.message || 'Failed to fetch forecast data');\n        }\n\n        setTrafficData(data);\n      } catch (err) {\n        console.error('API Error:', err);\n        setError(`Failed to fetch data: ${err.message}. Using mock data for demonstration.`);\n        setTrafficData(mockData);\n        setUsingMockData(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrafficData();\n  }, [location.search]);\n\n  const renderForecastChart = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n\n    const chartData = trafficData.analysis.flatMap(day => \n      day.day_raw.map((value, hour) => ({\n        day: day.day_info.day_text,\n        hour: hour,\n        traffic: value\n      }))\n    );\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\" label={{ value: 'Hour of Day', position: 'bottom' }} />\n          <YAxis label={{ value: 'Foot Traffic', angle: -90, position: 'insideLeft' }} />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend />\n          {trafficData.analysis.map(day => (\n            <Line \n              key={day.day_info.day_text} \n              type=\"monotone\" \n              dataKey=\"traffic\" \n              data={chartData.filter(d => d.day === day.day_info.day_text)}\n              name={day.day_info.day_text} \n              stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`} \n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-2 border border-gray-300 rounded shadow\">\n          <p>{`${data.day}, ${label}:00`}</p>\n          <p className=\"font-bold\">{`Foot Traffic: ${data.traffic}`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n\n    const { venue_name, venue_address, venue_timezone } = trafficData.venue_info;\n\n    return (\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Venue Information</h2>\n        <p><strong>Name:</strong> {venue_name}</p>\n        <p><strong>Address:</strong> {venue_address}</p>\n        <p><strong>Timezone:</strong> {venue_timezone}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n            {usingMockData && (\n              <p className=\"mt-2\">Using mock data for demonstration purposes.</p>\n            )}\n          </div>\n        )}\n\n        {trafficData && !loading && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <h2 className=\"text-xl font-semibold mb-4\">Weekly Foot Traffic Forecast</h2>\n            {renderForecastChart()}\n            {usingMockData && (\n              <p className=\"text-sm text-gray-500 mt-2\">Note: This is mock data for demonstration purposes.</p>\n            )}\n          </div>\n        )}\n\n        <div className=\"mt-8 bg-gray-200 p-4 rounded\">\n          <h2 className=\"text-lg font-semibold mb-2\">Debug Information</h2>\n          <pre className=\"whitespace-pre-wrap overflow-auto max-h-96\">\n            {JSON.stringify({ trafficData, loading, error, usingMockData }, null, 2)}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}