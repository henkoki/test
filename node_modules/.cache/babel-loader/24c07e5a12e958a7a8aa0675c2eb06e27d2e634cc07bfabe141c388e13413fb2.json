{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GYM_EQUIPMENT = [{\n  name: 'Cardio Zone',\n  percentage: 40,\n  subcategories: ['Treadmill section', 'Elliptical machine section', 'Rowing machine area', 'Stationary bikes', 'Stair climbers']\n}, {\n  name: 'Functional Training',\n  percentage: 30,\n  subcategories: ['Functional training zone', 'CrossFit area', 'TRX/Suspension training area', 'Plyometric boxes', 'Medicine ball area']\n}, {\n  name: 'Strength Training',\n  percentage: 12,\n  subcategories: ['Free weights area', 'Machine weights area', 'Power lifting platform', 'Squat rack zone', 'Bench press area', 'Cable machine section', 'Smith machine area']\n}, {\n  name: 'Group Fitness',\n  percentage: 12,\n  subcategories: ['Group fitness/Class studios', 'Spinning/Cycling studio', 'Yoga studio', 'Pilates studio', 'Aerobics room']\n}, {\n  name: 'Amenities',\n  percentage: 8,\n  subcategories: ['Locker rooms', 'Showers', 'Changing areas']\n}];\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const [isGymClosed, setIsGymClosed] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n      console.log('Fetching data for:', venueName, venueAddress);\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n        console.log('Fetching data from:', `${apiUrl}?${params}`);\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          throw new Error(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.search]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.shiftKey) {\n        const handleDoubleClick = () => {\n          setShowDebug(prev => !prev);\n          document.removeEventListener('dblclick', handleDoubleClick);\n        };\n        document.addEventListener('dblclick', handleDoubleClick);\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) {\n      console.log('No traffic data available');\n      return null;\n    }\n    const amsterdamTime = new Date().toLocaleString(\"en-US\", {\n      timeZone: \"Europe/Amsterdam\"\n    });\n    const currentDay = new Date(amsterdamTime).getDay();\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDayName = dayNames[currentDay];\n    console.log('Current day:', currentDayName);\n    const dayData = trafficData.analysis.find(day => day.day_info.day_text === currentDayName);\n    if (!dayData) {\n      console.log('No data found for current day');\n      return null;\n    }\n    return dayData.day_raw.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index}:00`\n    }));\n  };\n  const checkIfGymClosed = () => {\n    if (!trafficData || !trafficData.analysis) return true;\n    const currentHour = new Date().getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData[currentHour].traffic === 0 : true;\n  };\n  const getOpeningHours = () => {\n    if (!trafficData || !trafficData.analysis) return '';\n    const currentDayData = trafficData.analysis.find(day => day.day_info.day_text === new Date().toLocaleString('en-US', {\n      weekday: 'long'\n    }));\n    if (!currentDayData || !currentDayData.day_info.venue_open_close_v2) return '';\n    return currentDayData.day_info.venue_open_close_v2['12h'][0];\n  };\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) {\n      console.log('No chart data available');\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"traffic\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  };\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) {\n      console.log('No venue info available');\n      return null;\n    }\n    const {\n      venue_name,\n      venue_address,\n      venue_timezone\n    } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Gym Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: venue_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), isGymClosed && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\",\n          children: \"CLOSED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 12\n        }, this), \" \", venue_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timezone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 12\n        }, this), \" \", venue_timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), openingHours && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), \" \", openingHours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  };\n  const getCurrentTrafficPercentage = () => {\n    if (!trafficData || !trafficData.analysis) return 0;\n    const currentHour = new Date().getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData[currentHour].traffic : 0;\n  };\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\",\n      children: GYM_EQUIPMENT.map((equipment, index) => {\n        const usage = equipment.percentage / 100 * currentTrafficPercentage;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: equipment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-3xl font-bold text-blue-600\",\n            children: [usage.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2 group\",\n            children: [/*#__PURE__*/_jsxDEV(QuestionMarkCircleIcon, {\n              className: \"h-5 w-5 text-gray-400 hover:text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-4 text-sm\",\n                children: equipment.subcategories.map((sub, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: sub\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), isGymClosed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 bg-gray-200 bg-opacity-75 flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600 font-bold text-xl transform -rotate-45\",\n              children: \"CLOSED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    if (trafficData) {\n      setIsGymClosed(checkIfGymClosed());\n    }\n  }, [trafficData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), trafficData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Gym Equipment Usage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), renderEquipmentUsageCards(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Today's popular visiting hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), renderForecastChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), showDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-gray-200 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap overflow-auto max-h-96\",\n          children: JSON.stringify({\n            trafficData,\n            loading,\n            error,\n            isGymClosed\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"C7zEZldvLuUso2fzfmijULkMU8s=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","QuestionMarkCircleIcon","jsxDEV","_jsxDEV","GYM_EQUIPMENT","name","percentage","subcategories","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","showDebug","setShowDebug","isGymClosed","setIsGymClosed","navigate","location","fetchData","searchParams","URLSearchParams","search","venueName","get","venueAddress","console","log","apiUrl","params","response","fetch","method","ok","Error","status","data","json","message","err","handleKeyPress","e","shiftKey","handleDoubleClick","prev","document","removeEventListener","addEventListener","getCurrentDayData","analysis","amsterdamTime","Date","toLocaleString","timeZone","currentDay","getDay","dayNames","currentDayName","dayData","find","day","day_info","day_text","day_raw","map","value","index","hour","traffic","label","checkIfGymClosed","currentHour","getHours","currentDayData","getOpeningHours","weekday","venue_open_close_v2","renderForecastChart","chartData","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","renderVenueInfo","venue_info","venue_name","venue_address","venue_timezone","openingHours","className","getCurrentTrafficPercentage","renderEquipmentUsageCards","currentTrafficPercentage","equipment","usage","toFixed","sub","idx","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\n\nconst GYM_EQUIPMENT = [\n  { \n    name: 'Cardio Zone', \n    percentage: 40,\n    subcategories: [\n      'Treadmill section',\n      'Elliptical machine section',\n      'Rowing machine area',\n      'Stationary bikes',\n      'Stair climbers'\n    ]\n  },\n  { \n    name: 'Functional Training', \n    percentage: 30,\n    subcategories: [\n      'Functional training zone',\n      'CrossFit area',\n      'TRX/Suspension training area',\n      'Plyometric boxes',\n      'Medicine ball area'\n    ]\n  },\n  { \n    name: 'Strength Training', \n    percentage: 12,\n    subcategories: [\n      'Free weights area',\n      'Machine weights area',\n      'Power lifting platform',\n      'Squat rack zone',\n      'Bench press area',\n      'Cable machine section',\n      'Smith machine area'\n    ]\n  },\n  { \n    name: 'Group Fitness', \n    percentage: 12,\n    subcategories: [\n      'Group fitness/Class studios',\n      'Spinning/Cycling studio',\n      'Yoga studio',\n      'Pilates studio',\n      'Aerobics room'\n    ]\n  },\n  { \n    name: 'Amenities', \n    percentage: 8,\n    subcategories: [\n      'Locker rooms',\n      'Showers',\n      'Changing areas'\n    ]\n  },\n];\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const [isGymClosed, setIsGymClosed] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n\n      console.log('Fetching data for:', venueName, venueAddress);\n\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n\n        console.log('Fetching data from:', `${apiUrl}?${params}`);\n\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST',\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API Response:', data);\n\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          throw new Error(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [location.search]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.shiftKey) {\n        const handleDoubleClick = () => {\n          setShowDebug(prev => !prev);\n          document.removeEventListener('dblclick', handleDoubleClick);\n        };\n        document.addEventListener('dblclick', handleDoubleClick);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) {\n      console.log('No traffic data available');\n      return null;\n    }\n\n    const amsterdamTime = new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Amsterdam\"});\n    const currentDay = new Date(amsterdamTime).getDay();\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const currentDayName = dayNames[currentDay];\n\n    console.log('Current day:', currentDayName);\n\n    const dayData = trafficData.analysis.find(day => day.day_info.day_text === currentDayName);\n    \n    if (!dayData) {\n      console.log('No data found for current day');\n      return null;\n    }\n\n    return dayData.day_raw.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index}:00`\n    }));\n  };\n\n  const checkIfGymClosed = () => {\n    if (!trafficData || !trafficData.analysis) return true;\n    const currentHour = new Date().getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData[currentHour].traffic === 0 : true;\n  };\n\n  const getOpeningHours = () => {\n    if (!trafficData || !trafficData.analysis) return '';\n    const currentDayData = trafficData.analysis.find(day => day.day_info.day_text === new Date().toLocaleString('en-US', { weekday: 'long' }));\n    if (!currentDayData || !currentDayData.day_info.venue_open_close_v2) return '';\n    return currentDayData.day_info.venue_open_close_v2['12h'][0];\n  };\n\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) {\n      console.log('No chart data available');\n      return <p>No data available for today</p>;\n    }\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"label\" />\n          <YAxis />\n          <Tooltip />\n          <Bar dataKey=\"traffic\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) {\n      console.log('No venue info available');\n      return null;\n    }\n\n    const { venue_name, venue_address, venue_timezone } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n\n    return (\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Gym Information</h2>\n        <div className=\"flex items-center\">\n          <p className=\"font-bold\">{venue_name}</p>\n          {isGymClosed && <span className=\"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\">CLOSED</span>}\n        </div>\n        <p><strong>Address:</strong> {venue_address}</p>\n        <p><strong>Timezone:</strong> {venue_timezone}</p>\n        {openingHours && <p><strong>Hours:</strong> {openingHours}</p>}\n      </div>\n    );\n  };\n\n  const getCurrentTrafficPercentage = () => {\n    if (!trafficData || !trafficData.analysis) return 0;\n    const currentHour = new Date().getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData[currentHour].traffic : 0;\n  };\n\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\">\n        {GYM_EQUIPMENT.map((equipment, index) => {\n          const usage = (equipment.percentage / 100) * currentTrafficPercentage;\n          return (\n            <div key={index} className=\"bg-white rounded-lg shadow-md p-4 relative\">\n              <h3 className=\"text-lg font-semibold mb-2\">{equipment.name}</h3>\n              <p className=\"text-3xl font-bold text-blue-600\">{usage.toFixed(1)}%</p>\n              <div className=\"absolute top-2 right-2 group\">\n                <QuestionMarkCircleIcon className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                <div className=\"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\">\n                  <ul className=\"list-disc pl-4 text-sm\">\n                    {equipment.subcategories.map((sub, idx) => (\n                      <li key={idx}>{sub}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              {isGymClosed && (\n                <div className=\"absolute inset-0 bg-gray-200 bg-opacity-75 flex items-center justify-center\">\n                  <span className=\"text-red-600 font-bold text-xl transform -rotate-45\">CLOSED</span>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (trafficData) {\n      setIsGymClosed(checkIfGymClosed());\n    }\n  }, [trafficData]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n          </div>\n        )}\n\n        {trafficData && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <h2 className=\"text-xl font-semibold mb-4\">Gym Equipment Usage</h2>\n            {renderEquipmentUsageCards()}\n            <h2 className=\"text-xl font-semibold mb-4\">Today's popular visiting hours</h2>\n            {renderForecastChart()}\n          </div>\n        )}\n\n        {showDebug && (\n          <div className=\"mt-8 bg-gray-200 p-4 rounded\">\n            <h2 className=\"text-lg font-semibold mb-2\">Debug Information</h2>\n            <pre className=\"whitespace-pre-wrap overflow-auto max-h-96\">\n              {JSON.stringify({ trafficData, loading, error, isGymClosed }, null, 2)}\n            </pre>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}