{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n        console.log('Fetching data from:', `${apiUrl}?${params}`);\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          setError(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.search]);\n\n  // ... (keep the rest of the component logic, including getCurrentDayData, renderForecastChart, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), trafficData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: [\"Today's popular visiting hours (\", trafficData.analysis[0].day_info.day_text, \" 6AM until \", trafficData.analysis[1].day_info.day_text, \" 5AM)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), renderForecastChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), showDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-gray-200 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap overflow-auto max-h-96\",\n          children: JSON.stringify({\n            trafficData,\n            loading,\n            error\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"+61a4k3IJsn3cZmnL3z3xji6xMI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","showDebug","setShowDebug","navigate","location","fetchData","searchParams","URLSearchParams","search","venueName","get","venueAddress","apiUrl","params","console","log","response","fetch","method","ok","Error","status","data","json","message","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderVenueInfo","analysis","day_info","day_text","renderForecastChart","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n\n        console.log('Fetching data from:', `${apiUrl}?${params}`);\n\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST',\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API Response:', data);\n\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          setError(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [location.search]);\n\n  // ... (keep the rest of the component logic, including getCurrentDayData, renderForecastChart, etc.)\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n          </div>\n        )}\n\n        {trafficData && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <h2 className=\"text-xl font-semibold mb-4\">\n              Today's popular visiting hours ({trafficData.analysis[0].day_info.day_text} 6AM until {trafficData.analysis[1].day_info.day_text} 5AM)\n            </h2>\n            {renderForecastChart()}\n          </div>\n        )}\n\n        {showDebug && (\n          <div className=\"mt-8 bg-gray-200 p-4 rounded\">\n            <h2 className=\"text-lg font-semibold mb-2\">Debug Information</h2>\n            <pre className=\"whitespace-pre-wrap overflow-auto max-h-96\">\n              {JSON.stringify({ trafficData, loading, error }, null, 2)}\n            </pre>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}