{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GYM_EQUIPMENT = [{\n  name: 'Cardio Zone',\n  percentage: 40,\n  subcategories: ['Treadmills', 'Ellipticals', 'Stationary Bikes', 'Stair Climbers']\n}, {\n  name: 'Functional Training',\n  percentage: 30,\n  subcategories: ['Free Weights', 'Resistance Bands', 'Kettlebells', 'TRX']\n}, {\n  name: 'Strength Training',\n  percentage: 12,\n  subcategories: ['Weight Machines', 'Squat Racks', 'Bench Press']\n}, {\n  name: 'Group Fitness',\n  percentage: 12,\n  subcategories: ['Yoga Studio', 'Spin Class Room', 'Aerobics Room']\n}, {\n  name: 'Amenities',\n  percentage: 8,\n  subcategories: ['Locker Rooms', 'Showers', 'Sauna']\n}];\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          throw new Error(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [location.search]);\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.shiftKey) {\n        const handleDoubleClick = () => {\n          setShowDebug(prev => !prev);\n          document.removeEventListener('dblclick', handleDoubleClick);\n        };\n        document.addEventListener('dblclick', handleDoubleClick);\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const dayData = trafficData.analysis[currentDay];\n    return dayData.day_raw.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index.toString().padStart(2, '0')}:00`\n    }));\n  };\n  const getOpeningHours = () => {\n    var _currentDayData$day_i;\n    if (!trafficData || !trafficData.analysis) return '';\n    const currentDayData = trafficData.analysis[currentTime.getDay()];\n    if (!currentDayData || !currentDayData.day_info) return '';\n    return ((_currentDayData$day_i = currentDayData.day_info.venue_open_close_v2) === null || _currentDayData$day_i === void 0 ? void 0 : _currentDayData$day_i['12h'][0]) || 'Hours not available';\n  };\n  const isGymOpen24Hours = () => {\n    var _currentDayData$day_i2;\n    if (!trafficData || !trafficData.analysis) return false;\n    const currentDayData = trafficData.analysis[currentTime.getDay()];\n    return currentDayData && currentDayData.day_info && ((_currentDayData$day_i2 = currentDayData.day_info.venue_open_close_v2) === null || _currentDayData$day_i2 === void 0 ? void 0 : _currentDayData$day_i2['12h'][0]) === 'Open 24 hours';\n  };\n  const checkIfGymOpen = () => {\n    return isGymOpen24Hours(); // For 24/7 gyms, always return true\n  };\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"label\",\n          interval: 1,\n          tick: ({\n            x,\n            y,\n            payload\n          }) => /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${x},${y})`,\n            children: /*#__PURE__*/_jsxDEV(\"text\", {\n              x: 0,\n              y: 0,\n              dy: 16,\n              textAnchor: \"middle\",\n              fill: \"#666\",\n              transform: \"rotate(-35)\",\n              children: payload.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => `${value}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"traffic\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n    const {\n      venue_name,\n      venue_address,\n      venue_timezone\n    } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n    const isOpen = checkIfGymOpen();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Gym Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: venue_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\",\n          children: \"CLOSED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 12\n        }, this), \" \", venue_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timezone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 12\n        }, this), \" \", venue_timezone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 12\n        }, this), \" \", openingHours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  };\n  const getCurrentTrafficPercentage = () => {\n    var _currentDayData$find;\n    if (!trafficData || !trafficData.analysis) return 0;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentHour = new Date(currentLocalTime).getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? ((_currentDayData$find = currentDayData.find(data => data.hour === currentHour)) === null || _currentDayData$find === void 0 ? void 0 : _currentDayData$find.traffic) || 0 : 0;\n  };\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\",\n      children: GYM_EQUIPMENT.map((equipment, index) => {\n        const usage = equipment.percentage / 100 * currentTrafficPercentage;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: equipment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-3xl font-bold text-blue-600\",\n            children: [usage.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2 group\",\n            children: [/*#__PURE__*/_jsxDEV(QuestionMarkCircleIcon, {\n              className: \"h-5 w-5 text-gray-400 hover:text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-4 text-sm\",\n                children: equipment.subcategories.map((sub, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: sub\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSurgeHoursCard = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', {\n      timeZone: gymTimezone\n    });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.surge_hours) return null;\n    const {\n      most_people_come,\n      most_people_leave\n    } = currentDayData.surge_hours;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Surge Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Most people arrive: \", most_people_come, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Most people leave: \", most_people_leave, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), trafficData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold inline-block mr-2\",\n            children: \"Gym Equipment Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded\",\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), renderEquipmentUsageCards(), renderSurgeHoursCard(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Today's popular visiting hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), renderForecastChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), showDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-gray-200 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap overflow-auto max-h-96\",\n          children: JSON.stringify(trafficData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"pKa9+iY1wpa8gZn89FNxqDfVWU0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","QuestionMarkCircleIcon","jsxDEV","_jsxDEV","GYM_EQUIPMENT","name","percentage","subcategories","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","showDebug","setShowDebug","currentTime","setCurrentTime","Date","navigate","location","fetchData","searchParams","URLSearchParams","search","venueName","get","venueAddress","apiUrl","params","response","fetch","method","ok","Error","status","data","json","message","err","console","timer","setInterval","clearInterval","handleKeyPress","e","shiftKey","handleDoubleClick","prev","document","removeEventListener","addEventListener","getCurrentDayData","analysis","gymTimezone","venue_info","venue_timezone","currentLocalTime","toLocaleString","timeZone","currentDay","getDay","dayData","day_raw","map","value","index","hour","traffic","label","toString","padStart","getOpeningHours","_currentDayData$day_i","currentDayData","day_info","venue_open_close_v2","isGymOpen24Hours","_currentDayData$day_i2","checkIfGymOpen","renderForecastChart","chartData","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","interval","tick","x","y","payload","transform","dy","textAnchor","fill","formatter","renderVenueInfo","venue_name","venue_address","openingHours","isOpen","className","getCurrentTrafficPercentage","_currentDayData$find","currentHour","getHours","find","renderEquipmentUsageCards","currentTrafficPercentage","equipment","usage","toFixed","sub","idx","renderSurgeHoursCard","surge_hours","most_people_come","most_people_leave","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/solid';\n\nconst GYM_EQUIPMENT = [\n  { name: 'Cardio Zone', percentage: 40, subcategories: ['Treadmills', 'Ellipticals', 'Stationary Bikes', 'Stair Climbers'] },\n  { name: 'Functional Training', percentage: 30, subcategories: ['Free Weights', 'Resistance Bands', 'Kettlebells', 'TRX'] },\n  { name: 'Strength Training', percentage: 12, subcategories: ['Weight Machines', 'Squat Racks', 'Bench Press'] },\n  { name: 'Group Fitness', percentage: 12, subcategories: ['Yoga Studio', 'Spin Class Room', 'Aerobics Room'] },\n  { name: 'Amenities', percentage: 8, subcategories: ['Locker Rooms', 'Showers', 'Sauna'] },\n];\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const searchParams = new URLSearchParams(location.search);\n      const venueName = searchParams.get('name');\n      const venueAddress = searchParams.get('address');\n\n      if (!venueName || !venueAddress) {\n        setError('Venue information is missing.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const apiUrl = `https://besttime.app/api/v1/forecasts`;\n        const params = new URLSearchParams({\n          'api_key_private': 'pri_070565f833f9459aad223978a7a19b74',\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n\n        const response = await fetch(`${apiUrl}?${params}`, {\n          method: 'POST',\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        if (data.status === 'OK') {\n          setTrafficData(data);\n        } else {\n          throw new Error(data.message || 'Failed to fetch data');\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError(err.message || 'An error occurred while fetching data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [location.search]);\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.shiftKey) {\n        const handleDoubleClick = () => {\n          setShowDebug(prev => !prev);\n          document.removeEventListener('dblclick', handleDoubleClick);\n        };\n        document.addEventListener('dblclick', handleDoubleClick);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n\n  const getCurrentDayData = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const dayData = trafficData.analysis[currentDay];\n    \n    return dayData.day_raw.map((value, index) => ({\n      hour: index,\n      traffic: value,\n      label: `${index.toString().padStart(2, '0')}:00`\n    }));\n  };\n\n  const getOpeningHours = () => {\n    if (!trafficData || !trafficData.analysis) return '';\n    const currentDayData = trafficData.analysis[currentTime.getDay()];\n    if (!currentDayData || !currentDayData.day_info) return '';\n    \n    return currentDayData.day_info.venue_open_close_v2?.['12h'][0] || 'Hours not available';\n  };\n\n  const isGymOpen24Hours = () => {\n    if (!trafficData || !trafficData.analysis) return false;\n    const currentDayData = trafficData.analysis[currentTime.getDay()];\n    return currentDayData && currentDayData.day_info &&\n           currentDayData.day_info.venue_open_close_v2?.['12h'][0] === 'Open 24 hours';\n  };\n\n  const checkIfGymOpen = () => {\n    return isGymOpen24Hours(); // For 24/7 gyms, always return true\n  };\n\n  const renderForecastChart = () => {\n    const chartData = getCurrentDayData();\n    if (!chartData) return <p>No data available for today</p>;\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"label\" \n            interval={1} \n            tick={({ x, y, payload }) => (\n              <g transform={`translate(${x},${y})`}>\n                <text x={0} y={0} dy={16} textAnchor=\"middle\" fill=\"#666\" transform=\"rotate(-35)\">\n                  {payload.value}\n                </text>\n              </g>\n            )}\n          />\n          <YAxis />\n          <Tooltip formatter={(value) => `${value}%`} />\n          <Bar dataKey=\"traffic\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderVenueInfo = () => {\n    if (!trafficData || !trafficData.venue_info) return null;\n\n    const { venue_name, venue_address, venue_timezone } = trafficData.venue_info;\n    const openingHours = getOpeningHours();\n    const isOpen = checkIfGymOpen();\n\n    return (\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Gym Information</h2>\n        <div className=\"flex items-center\">\n          <p className=\"font-bold\">{venue_name}</p>\n          {!isOpen && <span className=\"ml-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\">CLOSED</span>}\n        </div>\n        <p><strong>Address:</strong> {venue_address}</p>\n        <p><strong>Timezone:</strong> {venue_timezone}</p>\n        <p><strong>Hours:</strong> {openingHours}</p>\n      </div>\n    );\n  };\n\n  const getCurrentTrafficPercentage = () => {\n    if (!trafficData || !trafficData.analysis) return 0;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentHour = new Date(currentLocalTime).getHours();\n    const currentDayData = getCurrentDayData();\n    return currentDayData ? currentDayData.find(data => data.hour === currentHour)?.traffic || 0 : 0;\n  };\n\n  const renderEquipmentUsageCards = () => {\n    const currentTrafficPercentage = getCurrentTrafficPercentage();\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 mb-6\">\n        {GYM_EQUIPMENT.map((equipment, index) => {\n          const usage = (equipment.percentage / 100) * currentTrafficPercentage;\n          return (\n            <div key={index} className=\"bg-white rounded-lg shadow-md p-4 relative\">\n              <h3 className=\"text-lg font-semibold mb-2\">{equipment.name}</h3>\n              <p className=\"text-3xl font-bold text-blue-600\">{usage.toFixed(1)}%</p>\n              <div className=\"absolute top-2 right-2 group\">\n                <QuestionMarkCircleIcon className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                <div className=\"hidden group-hover:block absolute right-0 w-48 p-2 bg-white border rounded shadow-lg z-10\">\n                  <ul className=\"list-disc pl-4 text-sm\">\n                    {equipment.subcategories.map((sub, idx) => (\n                      <li key={idx}>{sub}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderSurgeHoursCard = () => {\n    if (!trafficData || !trafficData.analysis) return null;\n    const gymTimezone = trafficData.venue_info.venue_timezone || 'Europe/Amsterdam';\n    const currentLocalTime = new Date().toLocaleString('en-US', { timeZone: gymTimezone });\n    const currentDay = new Date(currentLocalTime).getDay();\n    const currentDayData = trafficData.analysis[currentDay];\n    if (!currentDayData || !currentDayData.surge_hours) return null;\n\n    const { most_people_come, most_people_leave } = currentDayData.surge_hours;\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n        <h3 className=\"text-lg font-semibold mb-2\">Surge Hours</h3>\n        <p>Most people arrive: {most_people_come}:00</p>\n        <p>Most people leave: {most_people_leave}:00</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n          </div>\n        )}\n\n        {trafficData && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <div className=\"mb-4\">\n              <h2 className=\"text-xl font-semibold inline-block mr-2\">Gym Equipment Usage</h2>\n              <span className=\"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded\">Live</span>\n            </div>\n            {renderEquipmentUsageCards()}\n            {renderSurgeHoursCard()}\n            <h2 className=\"text-xl font-semibold mb-4\">Today's popular visiting hours</h2>\n            {renderForecastChart()}\n          </div>\n        )}\n\n        {showDebug && (\n          <div className=\"mt-8 bg-gray-200 p-4 rounded\">\n            <h2 className=\"text-lg font-semibold mb-2\">Debug Information</h2>\n            <pre className=\"whitespace-pre-wrap overflow-auto max-h-96\">\n              {JSON.stringify(trafficData, null, 2)}\n            </pre>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}