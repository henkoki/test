{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\study\\\\gymspotcheck\\\\src\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsPage = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    console.log(\"ResultsPage mounted\");\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n    console.log(\"Venue Name:\", venueName);\n    console.log(\"Venue Address:\", venueAddress);\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      return;\n    }\n    const fetchTrafficData = async () => {\n      try {\n        const apiKey = 'pri_070565f833f9459aad223978a7a19b74';\n        const besttimeUrl = 'https://besttime.app/api/v1/forecasts';\n        const params = new URLSearchParams({\n          'api_key_private': apiKey,\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n        console.log(\"Fetching data from:\", `${besttimeUrl}?${params}`);\n        const response = await fetch(`${besttimeUrl}?${params}`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"API Response:\", data);\n        if (data.status !== 'OK') {\n          throw new Error(data.message || 'Failed to fetch forecast data');\n        }\n        setTrafficData(data);\n      } catch (err) {\n        console.error('API Error:', err);\n        setError(err.message || 'Failed to fetch traffic data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrafficData();\n  }, [location.search]);\n\n  // ... rest of the component code (renderForecastChart, renderVenueInfo, etc.) remains the same\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"mb-6 text-blue-600 hover:text-blue-800\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Loading traffic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-red-500 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"The venue might not be in our database or there might be an issue with the API. Please try searching for a different venue.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), trafficData && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [renderVenueInfo(), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Weekly Foot Traffic Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), renderForecastChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-gray-200 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap overflow-auto max-h-96\",\n          children: JSON.stringify({\n            trafficData,\n            loading,\n            error\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"7/JPQFmryfFuKffuzS4u+9qcask=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ResultsPage","_s","trafficData","setTrafficData","loading","setLoading","error","setError","navigate","location","console","log","searchParams","URLSearchParams","search","venueName","get","venueAddress","fetchTrafficData","apiKey","besttimeUrl","params","response","fetch","method","ok","Error","status","data","json","message","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderVenueInfo","renderForecastChart","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/study/gymspotcheck/src/ResultsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst ResultsPage = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(\"ResultsPage mounted\");\n    const searchParams = new URLSearchParams(location.search);\n    const venueName = searchParams.get('name');\n    const venueAddress = searchParams.get('address');\n\n    console.log(\"Venue Name:\", venueName);\n    console.log(\"Venue Address:\", venueAddress);\n\n    if (!venueName || !venueAddress) {\n      setError('Venue information is missing.');\n      setLoading(false);\n      return;\n    }\n\n    const fetchTrafficData = async () => {\n      try {\n        const apiKey = 'pri_070565f833f9459aad223978a7a19b74';\n        const besttimeUrl = 'https://besttime.app/api/v1/forecasts';\n        const params = new URLSearchParams({\n          'api_key_private': apiKey,\n          'venue_name': venueName,\n          'venue_address': venueAddress\n        });\n\n        console.log(\"Fetching data from:\", `${besttimeUrl}?${params}`);\n\n        const response = await fetch(`${besttimeUrl}?${params}`, {\n          method: 'POST'\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"API Response:\", data);\n\n        if (data.status !== 'OK') {\n          throw new Error(data.message || 'Failed to fetch forecast data');\n        }\n\n        setTrafficData(data);\n      } catch (err) {\n        console.error('API Error:', err);\n        setError(err.message || 'Failed to fetch traffic data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrafficData();\n  }, [location.search]);\n\n  // ... rest of the component code (renderForecastChart, renderVenueInfo, etc.) remains the same\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <button\n          onClick={() => navigate('/')}\n          className=\"mb-6 text-blue-600 hover:text-blue-800\"\n        >\n          &larr; Back to Search\n        </button>\n\n        {loading && (\n          <div className=\"text-center text-gray-600\">\n            Loading traffic data...\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-center text-red-500 mb-4\">\n            <p>Error: {error}</p>\n            <p className=\"mt-2\">The venue might not be in our database or there might be an issue with the API. Please try searching for a different venue.</p>\n          </div>\n        )}\n\n        {trafficData && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            {renderVenueInfo()}\n            <h2 className=\"text-xl font-semibold mb-4\">Weekly Foot Traffic Forecast</h2>\n            {renderForecastChart()}\n          </div>\n        )}\n\n        <div className=\"mt-8 bg-gray-200 p-4 rounded\">\n          <h2 className=\"text-lg font-semibold mb-2\">Debug Information</h2>\n          <pre className=\"whitespace-pre-wrap overflow-auto max-h-96\">\n            {JSON.stringify({ trafficData, loading, error }, null, 2)}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}